{
  "name": "license-sentinel",
  "displayName": "License Sentinel üõ°Ô∏è",
  "description": "An intelligent, proactive assistant for managing and enforcing open-source license policies directly within VS Code.",
  "version": "0.0.1",
  "publisher": "thirawat27",
  "icon": "image/LicenseSentinel.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/thirawat27/License-Sentinel"
  },
  "engines": {
    "vscode": "^1.50.0"
  },
  "categories": [
    "Linters",
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "license",
    "compliance",
    "scanner",
    "dependency",
    "security",
    "linter",
    "ai",
    "npm",
    "composer",
    "maven",
    "cargo",
    "poetry",
    "oss"
  ],
  "activationEvents": [
    "onStartup"
  ],
  "main": "./extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "license-sentinel-view-container",
          "title": "License Sentinel",
          "icon": "$(shield)"
        }
      ]
    },
    "views": {
      "license-sentinel-view-container": [
        {
          "id": "license-sentinel-dependency-view",
          "name": "Dependencys",
          "type": "tree"
        }
      ]
    },
    "commands": [
      {
        "command": "license-sentinel.refresh",
        "title": "License Sentinel üõ°Ô∏è: Refresh Scan",
        "icon": "$(refresh)"
      },
      {
        "command": "license-sentinel.clearCache",
        "title": "License Sentinel üõ°Ô∏è: Clear Cache & Rescan",
        "icon": "$(trashcan)"
      },
      {
        "command": "license-sentinel.exportReport",
        "title": "License Sentinel üõ°Ô∏è: Export Report...",
        "icon": "$(export)"
      },
      {
        "command": "license-sentinel.goToManifestFile",
        "title": "Go to File"
      },
      {
        "command": "license-sentinel.openHomepage",
        "title": "Open Homepage"
      },
      {
        "command": "license-sentinel.addAllowedLicense",
        "title": "License Sentinel üõ°Ô∏è: Add to Allowed Licenses"
      },
      {
        "command": "license-sentinel.addDeniedLicense",
        "title": "License Sentinel üõ°Ô∏è: Add to Denied Licenses"
      },
      {
        "command": "license-sentinel.copyDependencyInfo",
        "title": "Copy Dependency Info (JSON)"
      },
      {
        "command": "license-sentinel.startScan",
        "title": "License Sentinel üõ°Ô∏è: Start Scan"
      },
      {
        "command": "license-sentinel.openSettings",
        "title": "License Sentinel üõ°Ô∏è: Open Settings",
        "icon": "$(settings-gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "license-sentinel.refresh",
          "when": "view == license-sentinel-dependency-view",
          "group": "navigation@1",
          "icon": "$(refresh)"
        },
        {
          "command": "license-sentinel.exportReport",
          "when": "view == license-sentinel-dependency-view",
          "group": "navigation@2",
          "icon": "$(export)"
        },
        {
          "command": "license-sentinel.clearCache",
          "when": "view == license-sentinel-dependency-view",
          "group": "navigation@2",
          "icon": "$(trashcan)"
        },
        {
          "command": "license-sentinel.openSettings",
          "when": "view == license-sentinel-dependency-view",
          "group": "navigation@3",
          "icon": "$(settings-gear)"
        }
      ],
      "view/item/context": [
        {
          "command": "license-sentinel.goToManifestFile",
          "when": "view == license-sentinel-dependency-view && viewItem == 'manifestFile'",
          "group": "navigation@1"
        },
        {
          "command": "license-sentinel.openHomepage",
          "when": "view == license-sentinel-dependency-view && viewItem =~ /dependencyItemWithHomepage/",
          "group": "navigation@1"
        },
        {
          "command": "license-sentinel.copyDependencyInfo",
          "when": "view == license-sentinel-dependency-view && viewItem =~ /dependencyItem/",
          "group": "copy@1"
        },
        {
          "command": "license-sentinel.addAllowedLicense",
          "when": "view == license-sentinel-dependency-view && viewItem =~ /dependencyItem/",
          "group": "policy@1"
        },
        {
          "command": "license-sentinel.addDeniedLicense",
          "when": "view == license-sentinel-dependency-view && viewItem =~ /dependencyItem/",
          "group": "policy@2"
        }
      ],
      "editor/context": [
        {
          "command": "license-sentinel.startScan",
          "when": "resourceFilename =~ /package.json$|composer.json$|pyproject.toml$|pom.xml$|go.mod$|Cargo.toml$/",
          "group": "licenseSentinel@1"
        },
        {
          "command": "license-sentinel.refresh",
          "when": "resourceFilename =~ /package.json$|composer.json$|pyproject.toml$|pom.xml$|go.mod$|Cargo.toml$/",
          "group": "licenseSentinel@2"
        },
        {
          "command": "license-sentinel.clearCache",
          "when": "resourceFilename =~ /package.json$|composer.json$|pyproject.toml$|pom.xml$|go.mod$|Cargo.toml$/",
          "group": "licenseSentinel@3"
        }
      ]
    },
    "configuration": {
      "title": "LicenseSentinel",
      "properties": {
        "license-sentinel.allowedLicenses": {
          "type": "array",
          "default": [
            "MIT",
            "ISC",
            "Apache-2.0",
            "BSD-2-Clause",
            "BSD-3-Clause"
          ],
          "description": "List of approved OSS licenses (case-insensitive)."
        },
        "license-sentinel.deniedLicenses": {
          "type": "array",
          "default": [
            "GPL-2.0",
            "GPL-3.0",
            "AGPL-3.0"
          ],
          "description": "List of explicitly denied OSS licenses (case-insensitive)."
        },
        "license-sentinel.excludePatterns": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/vendor/**",
            "**/target/**",
            "**/dist/**",
            "**/build/**",
            "**/.next/**",
            "**/.venv/**"
          ],
          "description": "An array of glob patterns to exclude from scanning. Prepend '**/' to match in any subdirectory."
        }
      }
    }
  },
  "dependencies": {
    "jsonc-parser": "^3.3.1",
    "toml": "^3.0.0",
    "xml2js": "^0.6.2"
  },
  "devDependencies": {
    "eslint": "^8.0.0"
  }
}
